[pytest]
# Pytest configuration for FSD test suite

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts =
    # Verbose output
    -v
    # Show local variables in tracebacks
    --showlocals
    # Show summary of all test outcomes
    -ra
    # Enable strict markers
    --strict-markers
    # Coverage options (requires pytest-cov)
    --cov=fsd
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    # Fail if coverage is below 80%
    --cov-fail-under=80
    # Show warnings
    -W default

# Markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (may be slower, test component interactions)
    e2e: End-to-end tests (complete workflow tests)
    slow: Slow running tests
    git: Tests that require git operations
    network: Tests that require network access
    requires_claude: Tests that require Claude CLI

# Test collection
# Ignore specific directories
norecursedirs =
    .git
    .venv
    venv
    __pycache__
    *.egg-info
    dist
    build
    .fsd

# Coverage options
[coverage:run]
source = fsd
omit =
    */tests/*
    */__pycache__/*
    */.*
    */venv/*
    */.venv/*
    */dist/*
    */build/*

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code
    def __repr__

    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:

    # Don't complain about abstract methods
    @(abc\.)?abstractmethod

    # Type checking blocks
    if TYPE_CHECKING:

# Minimum coverage percentage
precision = 2
show_missing = True
skip_covered = False
